[ ClassId ("6539E244-D5DD-4052-85A1-55D376787C38") ]
[ InterfaceId ("A1AC5AE6-8F40-4F24-9BAD-3CA448C2CDCA") ]
[ COMCreatable (False) ]
Private Class BaseControlWindowless

    Implements BaseControlRect Via BaseControlRect

    [ Serialize (False) ]
        Private RootWindowElementBase As WindowsControls.WindowElement
    [ Description ("Determines how the sides of this control are anchored to its container") ]
        Public ReadOnly Anchors As Anchors = New Anchors
    [ Description ("Adjusts how the control is docked inside of its container") ]
        Public ReadOnly Dock As VBRUN.DockModeConstants = VBRUN.DockModeConstants.vbDockNone
    [ Description ("Indicates if the user can use the TAB key to focus on this control at runtime") ]
        Public TabStop As Boolean = True
        Attribute TabStop.VB_VarUserMemId = -854
    [ Description ("Adjusts the TAB key order of this control at runtime") ]
        Public TabIndex As Long
    [ Description ("") ]
        Public Visible As Boolean = True

    Sub New(ByVal ControlType As ControlTypeConstants)
        Set Me.BaseControlRect = New BaseControlRect(ControlType)
    End Sub

    Friend Function CreateRootWindowElement(ByVal _ControlContext As stdole.IUnknown) As WindowElement
        Set Me.ControlContext = _ControlContext ' FIXME passed as IUnknown to prevent COM exposure of type
        Set Me.RootWindowElementBase = Me.ControlContext.CreateWindowElement(vbNullString, vbNullString, 0, 0, False)
        Return Me.RootWindowElementBase
    End Function
    
    Public Sub ScheduleCallback(ByVal Callback As IScheduledCallback)
        Me.ControlContext.ScheduleCallback(ObjPtr(Callback))
    End Sub

    Public Function CreateDeferredDispatchWrapper(ByRef Object As Object) As Object
    	Return Me.ControlContext.CreateDeferredDispatchWrapper(Object)
    End Function

    [ DispId (-856) ]
    Public Property Get Container() As Object
        On Error Resume Next
        Me.ControlContext.EnsureFormIsLoaded()
    	Return Me.RootWindowElementBase.Container
    End Property

    Private Sub OnPropertyChanged_Visible() _
            Handles Visible.OnPropertyLet

        Me.ControlContext.EnsureFormIsLoaded()
        Me.RootWindowElementBase.Container.Refresh()
    End Sub

    Private Sub OnTouchedFormProperties() _
            Handles Anchors.OnPropertyGet, _
                    Dock.OnPropertyGet, _
                    TabStop.OnPropertyGet, _
                    TabStop.OnPropertyLet, _
                    TabIndex.OnPropertyGet, _
                    TabIndex.OnPropertyLet, _
                    Visible.OnPropertyGet
                    
        Me.ControlContext.EnsureFormIsLoaded()
    End Sub

End Class